{
    "collab_server" : "",
    "contents" : "context(\"Validate bibliography\")\n\ntest_that(\"Bills of Parliament\", {\n  expect_error(validate_bibliography(file = \"./validate-bib/invalid-Bill.bib\"),\n               regexp = \"Bills? of Parliament\")\n  expect_null(validate_bibliography(file = \"./validate-bib/valid-Bill.bib\"))\n})\n\ntest_that(\"Duplicate fields noticed\", {\n  expect_error(fread_bib(\"./validate-bib/dup_fields.bib\"), \n               regexp = \"Duplicate fields found in RMS2010Hunter\")\n})\n\ntest_that(\"Duplicate entries error\", {\n  expect_error(any_bib_duplicates(\"./validate-bib/dup_entries.bib\"), \n               regexp = \"[Dd]uplicate entries in bibliography\")\n  expect_error(any_bib_duplicates(\"./validate-bib/dup_entries-2.bib\"), \n               regexp = \"[Dd]uplicate entries in bibliography\")\n})\n\ntest_that(\"Duplicate keys noticed\", {\n  expect_error(any_bib_duplicates(c(\"./validate-bib/dup-keys-1.bib\", \"./validate-bib/dup-keys-2.bib\")), \n               regexp = \"[Dd]uplicate bib key\")\n})\n\ntest_that(\"Broken fields detected\", {\n  expect_error(validate_bibliography(file = \"./validate-bib/field-broken-over2lines.bib\"), \n               regexp = \"which is neither a key, nor field\")\n})\n",
    "created" : 1494118942747.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "53777881",
    "id" : "91F1860A",
    "lastKnownWriteTime" : 1494119206,
    "last_content_update" : 1494119206463,
    "path" : "~/grattanReporter/tests/testthat/test_validate_bibliography.R",
    "project_path" : "tests/testthat/test_validate_bibliography.R",
    "properties" : {
    },
    "relative_order" : 28,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}