{
    "collab_server" : "",
    "contents" : "#' Check dashes entered as hyphens\n#'\n#' @param filename A tex or Rnw file.\n#' @param .report_error How errors should be reported.\n#' @return File stops and \\code{cat()}s on any line where a hyphen is surrounded by a space.\n#' Excludes dashes in knitr chunks and LaTeX math mode \\code{\\(...\\)} but not in TeX math mode \\code{$...$}.\n#' @export\n\ncheck_dashes <- function(filename, .report_error){\n  if (missing(.report_error)){\n    .report_error <- function(...) report2console(...)\n  }\n\n  lines <- read_lines(filename)\n\n  lines[isR_line_in_knitr(lines)] <- \"%\"\n  if (any(lines == \"\\\\begin{align*}\")){\n    math_environ <- \n      which(cumsum(lines == \"\\\\begin{align*}\") - cumsum(lines == \"\\\\end{align*}\") == 1L)\n    \n    lines[math_environ] <- \"% align environment\"\n  }\n\n  lines <- strip_comments(lines)\n\n  possible_hyphen <- grepl(\" - \", lines, fixed = TRUE)\n\n  if (any(possible_hyphen)){\n    excluding_mathmode <-\n      if_else(possible_hyphen,\n              # Cheat: \n              #  - remove % signs (so they don't interfere later). This is ok as we've stripped comments\n              #  - replace equations delimeters with % %. Struggled to match closing brackets otherwise (don't want to miss dashes between equations)\n              #  - replace anything between %s with \n              gsub(paste0(\"%\", \"[^%]*\", \"%\"),\n                   \"math-mode\",\n                   gsub(\"\\\\\\\\[()]\", \"%\",\n                        gsub(\"%\",\n                             \"\", \n                             lines),\n                        \n                        perl = TRUE),\n                   perl = TRUE),\n              lines)\n    \n    excluding_mathmode <-\n      if_else(possible_hyphen,\n              gsub(\"\\\\\\\\\\\\[.*$\",\n                   \"\",\n                   excluding_mathmode,\n                   perl = TRUE),\n              excluding_mathmode)\n\n    if (any(grepl(\" - \", excluding_mathmode, fixed = TRUE))){\n      line_no <- grep(\" - \", excluding_mathmode, fixed = TRUE)[[1]]\n      .report_error(line_no = line_no,\n                    context = lines[line_no],\n                    error_message = \"Dash likely masquerading as hyphen. Use -- for a dash.\", \n                    advice = \"\\nIMPORTANT: make sure you are replacing a hyphen with two hyphens, not a unicode dash  \\u2013\\n\",\n                    \"If you're not sure, reenter as two hyphens from the keyboard (rather than just appending a hyphen at the end). \",\n                    \"As always, visually check the result in the PDF.\")\n      stop(\"Single hyphen surrounded by spaces. This is likely a hyphen masquerading as dash. Use -- for a dash.\\n\",\n           \"\\nIMPORTANT: make sure you are replacing a hyphen with two hyphens, not a unicode dash  \\u2013\\n\",\n           \"If you're not sure, reenter as two hyphens from the keyboard (rather than just appending a hyphen at the end). \",\n           \"As always, visually check the result in the PDF.\")\n    }\n\n  }\n\n  # 35: Detect hyphens adjacent to unicode\n  if (any(or(grepl(\"-\\u2013\", lines, fixed = TRUE),\n             grepl(\"\\u2013-\", lines, fixed = TRUE)))){\n    line_no <-\n      which(or(grepl(\"-\\u2013\", lines, fixed = TRUE),\n               grepl(\"\\u2013-\", lines, fixed = TRUE))) %>%\n      .[1]\n    .report_error(line_no = line_no,\n                  context = lines[[line_no]],\n                  error_message = \"Hyphen adjacent to en-dash.\")\n    stop(\"Hyphen adjacent to en-dash. (Did you copy this line from Word?) \",\n         \"Make sure anything you intend as an en-dash is entered as ' -- '\")\n  }\n\n\n  if (any(grepl(\"\\\\\\\\label[^\\\\}]*\\\\s[^\\\\}]*\\\\}\", trimws(lines), perl = TRUE))){\n    line_no <- grep(\"\\\\\\\\label[^\\\\}]*\\\\s[^\\\\}]*\\\\}\", trimws(lines), perl = TRUE)[[1]]\n    nchars_b4 <- stringi::stri_locate_all_regex(pattern = \"\\\\\\\\label[^\\\\}]*\\\\s\", str = trimws(lines[[line_no]]), perl = TRUE)\n    context <- paste0(trimws(lines[[line_no]]), \"\\n\",\n                      paste0(rep(\" \", nchars_b4[[1]][[2]] - 2 + 5 + nchar(line_no)), collapse = \"\"), \"^^\")\n    .report_error(line_no = line_no,\n                  context = context,\n                  error_message = \"Space somewhere after \\\\label . Spaces are not permitted in \\\\label.\")\n    stop(\"Space somewhere after \\\\label. Spaces are not permitted in \\\\label.\")\n  }\n\n  are_emdash_lines <-\n    lines %>%\n    grep(\"---\", ., fixed = TRUE, value = TRUE) %>%\n    gsub(\"\\\\{[^\\\\s\\\\}]+\\\\}\", \"\\\\{\\\\}\", x = ., perl = TRUE) %>%\n    grepl(\"---\", ., fixed = TRUE)\n\n\n  if (any(are_emdash_lines) || any(grepl(\"\\u2014\", lines, fixed = TRUE))){\n    emdash_lines <-\n      lines %>%\n      gsub(\"\\\\{[^\\\\s\\\\}]+\\\\}\", \"\\\\{\\\\}\", x = ., perl = TRUE) %>%\n      grep(\"---\", x = ., fixed = TRUE)\n\n    emdash_lines <- union(emdash_lines,\n                          grep(\"\\u2014\", lines, fixed = TRUE))\n    line_no <- emdash_lines[[1]]\n    .report_error(line_no = line_no,\n                  context = lines[line_no],\n                  error_message = \"Em-dashes not permitted.\")\n    stop(\"Em-dashes not permitted.\")\n  }\n\n  invisible(NULL)\n}\n",
    "created" : 1486451445926.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2638431703",
    "id" : "7C8941BB",
    "lastKnownWriteTime" : 1488007182,
    "last_content_update" : 1488007182188,
    "path" : "~/grattanReporter/R/check_dashes.R",
    "project_path" : "R/check_dashes.R",
    "properties" : {
    },
    "relative_order" : 22,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}